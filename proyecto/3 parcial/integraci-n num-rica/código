"#Integral 1/x**2 en el intervalo de 1 a 2\n",
    "import  numpy as np\n",
    "\n",
    "def trapecio(y,h):\n",
    "    I = y[0]\n",
    "    I += y[-1]\n",
    "    I += sum(2*yi for yi in y[1:-1])\n",
    "    I *= h/2\n",
    "    return I\n",
    "\n",
    "def simpson13(y,h):  #Simpson 1/3\n",
    "    I = y[0]\n",
    "    I += y[-1]\n",
    "    for i in range (1, len(y)-1):\n",
    "        if(i % 2 == 0):\n",
    "            I += 2*y[i]\n",
    "        else:\n",
    "            I += 4*y[i]\n",
    "    I *= h/3\n",
    "    return I;\n",
    "\n",
    "def simpson38(y,h):  #Simpson 3/8\n",
    "    I = y[0]\n",
    "    I += y[-1]\n",
    "    for i in range (1, len(y)-1):\n",
    "        if(i % 3 == 0):\n",
    "            I += 2*y[i]\n",
    "        else:\n",
    "            I += 3*y[i]\n",
    "    I *= 3*h/8\n",
    "    return I\n",
    "\n",
    "def fun (x):  #funcion a integrar\n",
    "    return 1/x**2\n",
    "n = 9         # intervalo\n",
    "a = 1\n",
    "b = 2\n",
    "h = abs(a-b)/(n-1)\n",
    "x = np.linspace(a,b,n)\n",
    "y = [fun(xi)for xi in x]\n",
    "\n",
    "print ('x',x)\n",
    "print('y',y)\n",
    "\n",
    "print('trapecio',trapecio(y,h))\n",
    "print('simpson13',simpson13(y,h))\n",
    "print('simpson38',simpson38(y,h))"
